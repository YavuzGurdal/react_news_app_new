{"version":3,"sources":["data.js","components/NavBar/NavBar.js","components/NewsCard/NewsCard.js","components/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["categoryData","categoriesData","name","categoriesCountry","parameter","NavBar","props","useState","text","setText","category","setCategory","country","setCountry","click","style","fontFamily","Navbar","fixed","expand","bg","variant","Brand","href","className","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","map","item","i","Item","key","onClick","toLowerCase","Form","inline","onSubmit","event","preventDefault","click3","FormControl","type","value","onChange","e","target","placeholder","autoComplete","Button","NewsCard","width","newWidth","height","newHeight","Card","Img","src","urlToImage","Title","padding","Text","newTextHeight","description","display","HomePage","state","data","activeNewIndex","newsDetail","console","log","this","url","axios","get","then","result","setState","articles","catch","err","news","index","marginTop","float","CardGroup","position","top","right","window","location","Component","App","stateCategory","updateStateCategory","stateCountry","updateStateCountry","stateSearch","updateStateSearch","search","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0ab2a02d.chunk.js","sourcesContent":["\r\nexport const categoryData = {\r\n\r\n    categoriesData: [\r\n        {\r\n            name: 'Business'\r\n        },\r\n        {\r\n            name: 'Entertainment'\r\n        },\r\n        {\r\n            name: 'General'\r\n        },\r\n        {\r\n            name: 'Health'\r\n        },\r\n        {\r\n            name: 'Science'\r\n        },\r\n        {\r\n            name: 'Sports'\r\n        },\r\n        {\r\n            name: 'Technology'\r\n        }\r\n    ],\r\n\r\n    categoriesCountry: [\r\n        {\r\n            name: 'USA',\r\n            parameter: 'us'\r\n        },\r\n        {\r\n            name: 'GERMANY',\r\n            parameter: 'de'\r\n        },\r\n        {\r\n            name: 'TURKEY',\r\n            parameter: 'tr'\r\n        }\r\n    ]\r\n}\r\n\r\n\r\n// export const categoryData = {\r\n\r\n//     categoriesData: [\r\n//         {\r\n//             name: 'Business',\r\n//             parameter: 'business'\r\n//         },\r\n//         {\r\n//             name: 'Entertainment',\r\n//             parameter: 'entertainment'\r\n//         },\r\n//         {\r\n//             name: 'General',\r\n//             parameter: 'general'\r\n//         },\r\n//         {\r\n//             name: 'Health',\r\n//             parameter: 'health'\r\n//         },\r\n//         {\r\n//             name: 'Science',\r\n//             parameter: 'science'\r\n//         },\r\n//         {\r\n//             name: 'Sports',\r\n//             parameter: 'sports'\r\n//         },\r\n//         {\r\n//             name: 'Technology',\r\n//             parameter: 'technology'\r\n//         }\r\n//     ]\r\n// }","import React, { useState } from 'react';\r\nimport { Navbar, Nav, Form, FormControl, Button, NavDropdown } from 'react-bootstrap'\r\n// import { TiNews } from \"react-icons/ti\";\r\nimport { GiNewspaper } from \"react-icons/gi\";\r\nimport { categoryData } from '../../data';\r\n\r\n\r\nfunction NavBar(props) {\r\n\r\n    const [text, setText] = useState(null)\r\n\r\n    const [category, setCategory] = useState(null)\r\n    const [country, setCountry] = useState(null)\r\n\r\n    const sendFunction = () => {\r\n\r\n        props.click(\r\n            category,\r\n            country\r\n        )\r\n\r\n    }\r\n\r\n    sendFunction()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // submit\r\n        props.click3(\r\n            text\r\n        )\r\n        //console.log(text)\r\n        setText('')   \r\n    }\r\n\r\n\r\n    return (\r\n        //, position: \"sticky\", top:\"0\", zIndex: \"100\"     className=\"bg-dark\"   className=\"text-white\"\r\n        // fixed=\"top\" ; navbarın yukarıda sabit kalmasını saglıyor\r\n        //  style={{ position: \"sticky\", top: \"0\", zIndex: \"100\"}}\r\n        // expand=\"lg\"\r\n        <div style={{ fontFamily: 'Special Elite, cursive' }}>\r\n            <Navbar fixed=\"top\" expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/\">YVZ NEWS <GiNewspaper className='iconn' /></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        {/*<Nav.Link href=\"/news-detail\">Detail Page</Nav.Link>*/}\r\n                        <NavDropdown title=\"Categories\" id=\"basic-nav-dropdown\">\r\n                            {\r\n                                categoryData.categoriesData.map((item, i) =>\r\n                                    //<NavDropdown.Item key={i} onClick={() => props.click(`${item.name.toLowerCase()}`)}>{item.name}</NavDropdown.Item>\r\n                                    <NavDropdown.Item key={i} onClick={() => setCategory(`${item.name.toLowerCase()}`)}>{item.name}</NavDropdown.Item>\r\n                                )\r\n                            }\r\n                            {/*<NavDropdown.Item onClick={ () => props.click('business')}>Business</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={ () => props.click('entertainment')}>Entertainment</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={ () => props.click('general')}>General</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={ () => props.click('health')}>Health</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={ () => props.click('science')}>Science</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={ () => props.click('sports')}>Sports</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={ () => props.click('technology')}>Technology</NavDropdown.Item>*/}\r\n                        </NavDropdown>\r\n                        <NavDropdown title=\"Country\" id=\"basic-nav-dropdown\">\r\n                            {\r\n                                categoryData.categoriesCountry.map((item, i) =>\r\n                                    //<NavDropdown.Item key={i} onClick={() => props.click2(`${item.parameter}`)}>{item.name}</NavDropdown.Item>\r\n                                    <NavDropdown.Item key={i} onClick={() => setCountry(`${item.parameter}`)}>{item.name}</NavDropdown.Item>\r\n                                )\r\n                            }\r\n\r\n                            {/*<NavDropdown.Item onClick={() => props.click2('us')}>USA</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => props.click2('de')}>GERMANY</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => props.click2('tr')}>TURKEY</NavDropdown.Item> */}\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                    {/* <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-success\">Search</Button>\r\n\r\n                        onChange={e => setSearchValue(e.target.value)}\r\n                    </Form>*/}\r\n                    <Form inline onSubmit={handleSubmit}>\r\n                        <FormControl type=\"text\" value={text}  onChange={e => setText(e.target.value)} placeholder=\"Search\" className=\"mr-sm-2\" autoComplete='off'/>\r\n\r\n                        {/*<input\r\n                            name='text' // burası state'deki text olacak\r\n                            value={text}\r\n                            placeholder='todo...'\r\n                            onChange={this.handleChange}\r\n                        />*/}\r\n                        <Button type=\"submit\" variant=\"outline-success\">Search</Button>\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\n// import { Link } from 'react-router-dom'\r\n\r\nfunction NewsCard(props) {\r\n\r\n    // var clickHandler = (parametre) => {\r\n    //     console.log(parametre)\r\n    // }\r\n\r\n    return (\r\n\r\n        <div style={{ width: props.newWidth, height: props.newHeight /*width'i propsdan aldim. 100% yapabilmek icin*/ }}> \r\n            <div className=\"m-2 shadow cardbox\" >\r\n                <Card >\r\n                    <Card.Img variant=\"top\" src={props.urlToImage} style={{ height: '200px' }} />\r\n\r\n                    <Card.Title className=\"cardTitle mb-1\" style={{ height: '130px', padding: '8px' }}>{props.title}</Card.Title>\r\n                    <Card.Text className=\"cardText mb-1\" style={{ height: props.newTextHeight, padding: '8px' }}>\r\n                        {props.description}\r\n                    </Card.Text>\r\n\r\n                    <Button className='m-2' style={{display: props.display}} variant=\"outline-primary\"\r\n                        onClick= {props.click}\r\n                        //value={props.publishedAt}\r\n                        // onClick={onClickHandler}\r\n                        //onClick={ () => clickHandler({props.publishedAt}) }\r\n                    >\r\n                        Read More\r\n                    </Button>\r\n\r\n                    {/* <Link to=\"/news-detail\">\r\n                        <Button variant=\"primary\">Read More</Button>\r\n                    </Link> */}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsCard","import React, { Component } from 'react';\r\nimport { CardGroup } from 'react-bootstrap';\r\nimport NewsCard from '../NewsCard/NewsCard';\r\nimport axios from 'axios';\r\n\r\n// propsla NewCard.js icindeki sabit div icin class ismi gonder \r\n// sabit div icindeki css leri yukaridaki div adına tanımla\r\n// sabit div kısmını linkle baska sayfada acmayı dene\r\n// id yerine publishedAt kullanılamaz mı ???\r\n\r\nclass HomePage extends Component {\r\n    // {Your API key is: \"4120e32fdd1049bb95ff351e584be75d\"}\r\n    state = { // moc data koymamiz lazim, yoksa app problem oluyor. problemi onlemek icin if kosulu yazilabilir.\r\n        data: [\r\n            // {\r\n            //     urlToImage: \"https://www.nj.com/resizer/ewOeGU5IVwJgJ0_NXptqTfUN1M8=/1280x0/smart/arc-anglerfish-arc2-prod-advancelocal.s3.amazonaws.com/public/OEFHMGVTFNCNVBXNJQADDHCSRM.jpg\",\r\n            //     title: \"Test 1\",\r\n            //     description: \"Test 1 content\"\r\n            // },\r\n            {\r\n                urlToImage: null, // \"https://www.nj.com/resizer/ewOeGU5IVwJgJ0_NXptqTfUN1M8=/1280x0/smart/arc-anglerfish-arc2-prod-advancelocal.s3.amazonaws.com/public/OEFHMGVTFNCNVBXNJQADDHCSRM.jpg\",\r\n                title: null,//\"Test 2\",\r\n                description: null//\"Test 2 content\"\r\n            }\r\n        ],\r\n        activeNewIndex: 0, // bunu componentDidUpdate'te kullandik\r\n        newsDetail: null\r\n    }\r\n    \r\n\r\n    componentDidMount() { // internetten data alirken bunu kullaniyoruz.Bu kisim render dan sonra calisiyor ve\r\n        // render'i tekrar calistiriyor.\r\n\r\n        console.log(this.props.country)\r\n        console.log(this.props.category)\r\n\r\n        const urlBase = 'https://newsapi.org/v2/top-headlines?'\r\n        const urlCountry = this.props.country !== null ? `country=${this.props.country}&` : 'country=us&'\r\n        const category = this.props.category !== null ? `category=${this.props.category}&` : 'category=general&'\r\n        const urlApi = 'apiKey=4120e32fdd1049bb95ff351e584be75d'\r\n\r\n        const url = urlBase + urlCountry + category + urlApi;\r\n\r\n\r\n        /*\r\n        const urlBase = 'https://newsapi.org/v2/everything?'\r\n        const urlSearch = this.props.search !== null ? `q=${this.props.search}&` : 'q=corona&'\r\n        //const urlLanguage = this.props.country !== null ? `language=${this.props.country}&` : 'language=en&'\r\n        const urlLanguage = this.props.country === 'us' ? 'language=en&' :  // abd ulke kodu ve dil kodu farkli oldugu icin bunu yazdim\r\n        this.props.country !== null ? `language=${this.props.country}&`: ''\r\n       \r\n        const urlApi = 'apiKey=4120e32fdd1049bb95ff351e584be75d'\r\n\r\n        const url = urlBase + urlSearch + urlLanguage + urlApi;\r\n        */\r\n\r\n        // yukaridaki sekilde calisiyor.\r\n        // Sorunlar\r\n        // 1-abd ulke kodu us, dil kodu en (cozuldu)\r\n        // 2-kelimeleri yanlış yazınca aramalarda problem cikabiliyor.  \r\n        // 3-search kısmında tusa yada enter'a basınca yani ordan bişey gelince everything olan url calissin istiyorum ama kosulu yazamadim\r\n\r\n\r\n\r\n        //     'http://newsapi.org/v2/top-headlines?' + // butun haberler icin url\r\n        //     // ulke kodlari\r\n        //     //'country=us&' +\r\n        //     'country=de&' +\r\n        //     //'country=tr&' +\r\n        //     'apiKey=4120e32fdd1049bb95ff351e584be75d';\r\n\r\n\r\n        axios.get(url)\r\n            .then(result => {\r\n                console.log(result)\r\n                this.setState({ data: result.data.articles })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate calisti')\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log('render calisti')\r\n\r\n        console.log(this.props.country)\r\n        console.log(this.props.category)\r\n\r\n        const updateActiveNewIndex = (index) => { // bu bir function. const koymamin sebebi render icinde yazmis olmam\r\n            this.setState({\r\n                activeNewIndex: index\r\n            })\r\n        }\r\n\r\n        // akşam burayı degistirdim\r\n        const news = this.state.data.map((item, i) => {\r\n            return ( // bu return'u map()'den dolayi yazdim\r\n                <NewsCard\r\n                    key={i}\r\n                    {...item}\r\n\r\n                    //******** propsla class veya style gonderebiliriz. asagidaki gibi ********/\r\n                    newWidth=\"25%\" // bunun ismini propsdaki ile ayni yazdim.\r\n                    newHeight='570px'\r\n                    newTextHeight='150px'\r\n                    // display= 'block'\r\n\r\n                    click={() => updateActiveNewIndex(i)} // burdaki {} 'ler olmayadabilir\r\n\r\n                />\r\n            );\r\n        });\r\n        //console.log(this.state.activeNewIndex);\r\n\r\n        //<div className='mt-2' style={{height:\"200px\"}}>\r\n\r\n        const i = this.state.activeNewIndex; // bunu asagidaki NewsCard'in icindekileri kisa olarak i yazmak icin yazdik\r\n\r\n        const visitUrlHandler = () => { // const koymamin sebebi render icinde yazmis olmam\r\n            console.log(this.state.data[i].url)\r\n            window.location.href = this.state.data[i].url; // haberin detay sayfasına gitmek icin\r\n        }\r\n\r\n        return (\r\n\r\n            <div style={{ marginTop: \"65px\" }} >\r\n                <div style={{ width: '70%', float: \"left\" }} >\r\n                    <CardGroup >\r\n                        {news}\r\n\r\n                        {/*<NewsCard />*/}\r\n                    </CardGroup>\r\n                </div>\r\n\r\n                <div style={{ width: '30%', float: \"left\", position: 'fixed', top: '65px', right: 0 }} >\r\n                    <div>\r\n                    \r\n                        <NewsCard\r\n                            click={visitUrlHandler} // haberin linkini almak icin\r\n                            //******** propsla class veya style gonderebiliriz. asagidaki gibi ********/\r\n                            newWidth=\"100%\" // bunu propsla gondermemin sebebi ekranda sagdaki tek cardın width'ini 100% yapmak icin\r\n                            newHeight='570px'\r\n                            newTextHeight='204px'\r\n                            //display='none' // olusacak card'ların display durumlarını propsla gonderiyorum. \r\n                            // bunu sagdaki buyuk divin icindeki buttonu yok etmek icin kullandim\r\n                            urlToImage={this.state.data[i].urlToImage}\r\n                            title={this.state.data[i].title}\r\n                            description={this.state.data[i].description}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { useState } from 'react';\nimport './App.css';\n//import { Switch, Route } from 'react-router-dom';\n//import HomePage from './components/HomePage/HomePage';\nimport NavBar from './components/NavBar/NavBar';\nimport HomePage from './components/HomePage/HomePage';\n//import DetailPage from './components/DetailPage/DetailPage';\n\n// Problem-1 --> haber linkine gidip geri gelince, site tekrar default degerlere gidiyor\n\nfunction App(props) {\n\n  // bunlarin hepsini App.js 'i render yapmak icin yaptik\n\n  const [stateCategory, updateStateCategory] = useState(null) // gelen category'leri alt componente atabilmek icin state yaptik \n \n  const [stateCountry, updateStateCountry] = useState(null) // gelen country'leri alt componente atabilmek icin state yaptik\n\n  const [stateSearch, updateStateSearch] = useState(null) // gelen search'leri alt componente atabilmek icin state yaptik\n\n\n  const categoriesHandler = (category, country) => { // data dan kastimiz navbar dan gelen categoriler\n    console.log(category)\n    console.log(country)\n    updateStateCategory(category)\n    updateStateCountry(country)\n\n    console.log(stateCategory)\n    console.log(stateCountry)\n  }\n\n  // const countriesHandler = (country) => {\n  //   updateStateCountry(country)\n  // }\n\n  const searchHandler = (search) => {\n    //console.log(search)\n    updateStateSearch(search)\n  }\n\n  //click2= {countriesHandler}\n  return (\n    <div>\n\n      <NavBar click= {categoriesHandler} click3={searchHandler}/>\n\n      <HomePage category={stateCategory} country={stateCountry} search={stateSearch}/>\n\n      {/*\n      <Switch>\n        <Route exact path=\"/\" component={ () => <HomePage category={stateCategory} country={stateCountry} search={stateSearch}/> } /> {/* route'lu componente bu sekilde props gonderiyoruz \n        <Route path=\"/news-detail\" component={DetailPage} />\n         <Route path=\"/portfolio\" component={PortfolioPage} />\n        <Route component={Page404} />  /}\n      </Switch>\n      */}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// import { BrowserRouter as Router } from 'react-router-dom';\n\n// ReactDOM.render(\n//     <Router>\n//       <App />\n//     </Router>\n//     , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}